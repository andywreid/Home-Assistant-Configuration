# #***************************************************
# #   BusyLight Presence Indicator
# #     Light Component
# #   Richard Huish 2020
# #   I built so my family can know when I'm busy and working in my Home Office.
# #   ESP8266 based with local home-assistant.io GUI with controller with physical buttons and mini display
# #   See busylight_controller.yaml for Controller Component
# #   ----------
# #   Github: https://github.com/genestealer/Home-Assistant-Configuration/tree/master/esphome
# #   ----------
# #   GUI: Locally hosted home assistant on network https://www.home-assistant.io/
# #   API: Locally hosted native API component https://esphome.io/components/api.html
# #   OTA updates: https://esphome.io/components/ota.html
# #   ----------
# #   The circuit:
# #     Adafruit Feather HUZZAH with ESP8266 https://www.adafruit.com/product/2821
# #     Breadboard-friendly RGB Smart NeoPixel https://www.adafruit.com/product/1312
# #     4-channel I2C-safe Bi-directional Logic Level Converter - BSS138 https://www.adafruit.com/product/757
# #     Ping pong ball to diffuse 
# #   Inputs:
# #     BusyLight Presence Indicator Controller via Home Assistant
# #   Outputs:
# #     NeoPixel, via Logic Level Converter as NeoPixel needs 5V and ESP8266 is 3.3V.
# ##############################################################
# # Config Header for Device
# ##############################################################
# substitutions:
#   # Used by ESP Home
#   device_name: busy-light-02
#   # Used by ESP Home
#   device_description: "Busy Light 2"
#   # Prefix used by Wifi IP, RSSI etc
#   upper_devicename: "Busy Light 2"
#   # Prefix used by main Inputs & Outputs
#   short_devicename: "Busy Light 2"
#   ip: 192.168.2.34
#   pass: hxN#^fPPv5ZRy%7l
#   status_led: LED_RED
#   platform: ESP8266
#   board: huzzah
  
# ##############################################################
# # Shared code from all my projects
# ##############################################################
# esphome:
#   name: ${device_name}
#   comment: ${device_description}
#   platform: ${platform}
#   board: ${board}
  
# wifi:
#   ssid: !secret IoT_VLAN_SSID
#   password: !secret IoT_VLAN_SSID_Key
#   manual_ip:
#     static_ip: $ip
#     gateway: 192.168.2.1
#     subnet: 255.255.255.0

# logger: # Enable logging

# api: # Enable Home Assistant API
#   password: $pass

# ota: # Enable over the air updates
#   password: $pass
#   safe_mode: true
#   reboot_timeout: 10min
#   num_attempts: 5

# # Status LED for connection
# status_led:
#   pin:
#     number: ${status_led}

# ##############################################################
# # Non-Shared Code (May contain shared code)
# ##############################################################

# text_sensor:
# # Shared code beginning... 
#   # Wifi Data
#   - platform: wifi_info  
#     ip_address:
#       name: ${upper_devicename} IP
#       icon: "mdi:ip-network-outline"
#     ssid:
#       name: ${upper_devicename} SSID
#       icon: "mdi:help-network-outline"
#     bssid:
#       name: ${upper_devicename} BSSID
#       icon: "mdi:access-point-network"
# # ...shared code end

# binary_sensor:
# # Shared code beginning... 
#   # Device avaliablity
#   - platform: status  
#     name: ${upper_devicename} Status
#     device_class: connectivity
# # ...shared code end

# sensor:
# # Shared code beginning... 
#   # Wifi signal strength
#   - platform: wifi_signal
#     name: ${upper_devicename} RSSI
#     update_interval: 300s
#     # icon: "mdi:access-point-network"
#     device_class: signal_strength
#     state_class: measurement
# # ...shared code end
    
# light:
#   - platform: neopixelbus
#     method: ESP8266_UART1
#     type: GRB
#     pin: 2
#     num_leds: 1
#     name: ${upper_devicename}
#     id: busylight
#     variant: 800KBPS





#***************************************************
#   BusyLight Presence Indicator
#     Light Component
#   Richard Huish 2020
#   I built so my family can know when I'm busy and working in my Home Office.
#   ESP8266 based with local home-assistant.io GUI with controller with physical buttons and mini display
#   See busylight_controller.yaml for Controller Component
#   ----------
#   Github: https://github.com/genestealer/Home-Assistant-Configuration/tree/master/esphome
#   ----------
#   GUI: Locally hosted home assistant on network https://www.home-assistant.io/
#   API: Locally hosted native API component https://esphome.io/components/api.html
#   OTA updates: https://esphome.io/components/ota.html
#   ----------
#   The circuit:
#     Adafruit Feather HUZZAH with ESP8266 https://www.adafruit.com/product/2821
#     Breadboard-friendly RGB Smart NeoPixel https://www.adafruit.com/product/1312
#     4-channel I2C-safe Bi-directional Logic Level Converter - BSS138 https://www.adafruit.com/product/757
#     Ping pong ball to diffuse 
#   Inputs:
#     BusyLight Presence Indicator Controller via Home Assistant
#   Outputs:
#     NeoPixel, via Logic Level Converter as NeoPixel needs 5V and ESP8266 is 3.3V.
##############################################################
# Config Header for Device
##############################################################
substitutions:
  # Used by ESP Home
  device_name: busy-light-02
  # Used by ESP Home
  device_description: "Busy Light 2"
  # Prefix used by Wifi IP, RSSI etc
  upper_devicename: "Busy Light 2"
  # Prefix used by main Inputs & Outputs
  short_devicename: "Busy Light 2"
  ip: 192.168.2.34
  pass: hxN#^fPPv5ZRy%7l
  status_led: LED_RED
  platform: ESP8266
  board: huzzah
  
##############################################################
# Shared code from all my projects
##############################################################
esphome:
  name: ${device_name}
  comment: ${device_description}
  platform: ${platform}
  board: ${board}
  
wifi:
  ssid: !secret IoT_VLAN_SSID
  password: !secret IoT_VLAN_SSID_Key
  manual_ip:
    static_ip: $ip
    gateway: 192.168.2.1
    subnet: 255.255.255.0

logger: # Enable logging

api: # Enable Home Assistant API
  password: $pass

ota: # Enable over the air updates
  password: $pass
  safe_mode: true
  reboot_timeout: 10min
  num_attempts: 5

# Status LED for connection
status_led:
  pin:
    number: ${status_led}

##############################################################
# Non-Shared Code (May contain shared code)
##############################################################

text_sensor:
# Shared code beginning... 
  # Wifi Data
  - platform: wifi_info  
    ip_address:
      name: ${upper_devicename} IP
      icon: "mdi:ip-network-outline"
    ssid:
      name: ${upper_devicename} SSID
      icon: "mdi:help-network-outline"
    bssid:
      name: ${upper_devicename} BSSID
      icon: "mdi:access-point-network"
# ...shared code end

binary_sensor:
# Shared code beginning... 
  # Device avaliablity
  - platform: status  
    name: ${upper_devicename} Status
    device_class: connectivity
# ...shared code end

sensor:
# Shared code beginning... 
  # Wifi signal strength
  - platform: wifi_signal
    name: ${upper_devicename} RSSI
    update_interval: 300s
    # icon: "mdi:access-point-network"
    device_class: signal_strength
    state_class: measurement
# ...shared code end
    
light:
  - platform: neopixelbus
    method: ESP8266_UART1
    type: GRB
    pin: 2
    num_leds: 8
    name: ${upper_devicename}
    id: busylight
    variant: 800KBPS
