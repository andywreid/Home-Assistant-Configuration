- id: '1529366648322'
  alias: Open Chicken Door At Morning
  description: Open at Dawn
  trigger:
  - platform: time
    at: 08:00:00
  condition: []
  action:
  - entity_id: cover.chicken_coop_door
    service: cover.open_cover
  mode: single
- id: '1541895123592'
  alias: 'Notify: if CCTV Goes Offline'
  description: Notify if CCTV goes off for more than a specific length of time, originally
    used ping detector binary sensors, but in 2022 migrated over to the camera availability,
    provided by the axis camera component. 2022, moved back to Ping detects binary
    sensors so that I can use the sensors for other things.
  trigger:
  - entity_id: binary_sensor.front_door_cctv_online
    for: 00:10:00
    from: 'on'
    platform: state
    to: 'off'
  - entity_id: binary_sensor.bunny_cctv_online
    for: 00:10:00
    from: 'on'
    platform: state
    to: 'off'
  - entity_id: binary_sensor.drive_cctv_online
    for: 00:10:00
    from: 'on'
    platform: state
    to: 'off'
  - entity_id: binary_sensor.garden_cctv_online
    for: 00:10:00
    from: 'on'
    platform: state
    to: 'off'
  - entity_id: binary_sensor.garage_cctv_online
    for: 00:10:00
    from: 'on'
    platform: state
    to: 'off'
  - entity_id: binary_sensor.garage_2_cctv_online
    for: 00:10:00
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      title: CCTV Offline
      message: '{{trigger.entity_id}} offline'
    service: notify.google_cloud_notify
- id: '1558317969078'
  alias: CCTV Reboot Each Monday
  trigger:
  - at: 06:45
    platform: time
  condition:
  - condition: time
    weekday:
    - mon
  action:
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.11_front_door_reboot
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id:
      - button.12_drive_long_reboot
      - button.18_garden_reboot
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id:
      - button.13_garage_reboot
      - button.15_chickens_reboot
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.16_drive_high_reboot
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.21_drive_higher_reboot
- id: '1564192629041'
  alias: 'Irrigation: Pot Irrigation Script Off to Valve Off'
  description: 'If script is turned off manually, then close valve, else it will stay
    open. '
  trigger:
  - entity_id: script.front_garden_pot_irrigation_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: switch.front_garden_pot_irrigation_valve
    service: switch.turn_off
- id: '1564192623451'
  alias: 'Irrigation: Irrigate Front Garden Pots at Sunrise'
  trigger:
  - platform: template
    value_template: '{{states(''sensor.time'') == states(''sensor.front_garden_pot_irrigation_next_run'')[19:24]}}'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states(''sensor.front_garden_pot_irrigation_next_run'')[5:15]
        == now().date().strftime(''%d-%m-%Y'')}}'
    - condition: state
      entity_id: sensor.front_garden_pots_irrigation_interlock
      state: Uninhibited
  action:
  - entity_id: script.front_garden_pot_irrigation_timer
    service: script.front_garden_pot_irrigation_timer
- id: '1564192123451'
  alias: 'Irrigation: Irrigate Back Garden at Sunrise'
  description: With editable offset
  trigger:
  - platform: template
    value_template: '{{states(''sensor.time'') == states(''sensor.back_garden_irrigation_next_run'')[19:24]}}'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states(''sensor.back_garden_irrigation_next_run'')[5:15]
        == now().date().strftime(''%d-%m-%Y'')}}'
    - condition: state
      entity_id: sensor.back_garden_irrigation_interlock
      state: Uninhibited
  action:
  - entity_id: script.back_garden_irrigation_timer
    service: script.back_garden_irrigation_timer
- id: '1564192123123'
  alias: 'Irrigation: Irrigate Back Garden Lawn at Sunrise'
  trigger:
  - platform: template
    value_template: '{{states(''sensor.time'') == states(''sensor.back_garden_lawn_irrigation_next_run'')[19:24]}}'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states(''sensor.back_garden_lawn_irrigation_next_run'')[5:15]
        == now().date().strftime(''%d-%m-%Y'')}}'
    - condition: state
      entity_id: sensor.back_garden_lawn_irrigation_interlock
      state: Uninhibited
  action:
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - entity_id: script.back_garden_lawn_irrigation_timer
    service: script.back_garden_lawn_irrigation_timer
- id: '1564192623452'
  alias: 'Irrigation: Irrigate Front Lawn at Sunrise'
  trigger:
  - platform: template
    value_template: '{{states(''sensor.time'') == states(''sensor.front_garden_lawn_irrigation_next_run'')[19:24]}}'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states(''sensor.front_garden_lawn_irrigation_next_run'')[5:15]
        == now().date().strftime(''%d-%m-%Y'')}}'
    - condition: state
      entity_id: sensor.front_garden_lawn_irrigation_interlock
      state: Uninhibited
  action:
  - entity_id: script.front_garden_lawn_irrigation_timer
    service: script.front_garden_lawn_irrigation_timer
- id: '1564234217905'
  alias: 'Irrigation: Lawn Irrigation Script Off to Valve Off'
  description: 'If script is turned off manually, then close valve, else it will stay
    open. '
  trigger:
  - entity_id: script.front_garden_lawn_irrigation_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: switch.front_garden_lawn_irrigation_valve
    service: switch.turn_off
- id: '1512334217905'
  alias: 'Irrigation: Garden Irrigation Script Off to Valve Off'
  description: 'If script is turned off manually, then close valve, else it will stay
    open. '
  trigger:
  - entity_id: script.back_garden_irrigation_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: switch.back_garden_irrigation_valve
    service: switch.turn_off
- id: '1512331237905'
  alias: 'Irrigation: Garden Lawn Irrigation Script Off to Valve Off'
  description: 'If script is turned off manually, then close valve, else it will stay
    open. '
  trigger:
  - entity_id: script.back_garden_lawn_irrigation_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - entity_id: switch.back_garden_lawn_1_irrigation_valve
    service: switch.turn_off
  - entity_id: switch.back_garden_lawn_2_irrigation_valve
    service: switch.turn_off
- id: '1564245956941'
  alias: Kitchen Fan Script Off to Switch Off
  description: Not sure why I wrote this?
  trigger:
  - entity_id: script.kitchen_extractor_timer
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: switch.kitchen_extractor_fan
    service: switch.turn_off
  mode: single
- id: '1572464632861'
  alias: Smoke Machine Automation - Smoke
  description: 'Don''t need to turn on and off, as RF Link signal_repetitions: xx
    is used to set on the "on" time. Makes use of twrecked/hass-momentary Momentary
    Switch Component for Home Assistant'
  trigger:
  - event_data: {}
    event_type: smoke_machine_automation
    platform: event
    enabled: false
  - type: motion
    platform: device
    device_id: 853ca02c816df4ce4860c07060837a6a
    entity_id: binary_sensor.front_door_11_vmd4_camera1profile2
    domain: binary_sensor
    enabled: false
  - type: motion
    platform: device
    device_id: 83dd8340e23fb86fef21b09a22a57929
    entity_id: binary_sensor.drive_higher_21_vmd4_camera1profile2
    domain: binary_sensor
    enabled: false
  - platform: state
    entity_id:
    - switch.smoke_machine
    to: 'off'
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.smoke_machine
    enabled: false
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
    enabled: false
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.smoke_machine
    enabled: false
  - event: smoke_machine_automation
    event_data: {}
    enabled: false
  - service: switch.toggle
    data: {}
    target:
      entity_id: switch.smoke_machine
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.smoke_machine
    enabled: false
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
    enabled: true
- id: '1576599112935'
  alias: Welcome home Richard
  description: 'Note: These actions can only be edited with YAML'
  trigger:
  - entity_id: person.richard
    for: 00:05:00
    from: not_home
    platform: state
    to: home
  condition: []
  action:
  - data_template:
      cache: false
      entity_id: media_player.ground_floor
      message: "Welcome home Richard. {% if is_state('person.lucy', 'home')  %} Lucy
        is also at home and needs cuddles! {%- else -%}\n    Lucy is away at {{state_attr('device_tracker.google_maps_114635444798949098363',
        'address')}}.\n {%- endif %}\n    Outside {{states('sensor.dark_sky_temperature')|
        round(0)}}C {{states('sensor.dark_sky_humidity')| round(0) }}% Inside {{states('sensor.entryway_thermostat_temperature')|
        round(0)}}C \n{{states('sensor.entryway_thermostat_humidity')| round(0)}}%
        {% if is_state('climate.entryway', 'heat') %} Heating on and set to {{state_attr('climate.entryway',
        'temperature')| round(0) }}°C\n{%- endif %}\n"
    service: tts.google_translate_say
- id: '1576601014597'
  alias: Plug-in Air Freshener - On-Off Automation
  description: 'Turn on in the morning when someone is home as long as it between
    certain times. Also turns back on after returning home. Turn off in the evening
    or when no one is home. Repeat as it sometimes does not work '
  trigger:
  - platform: time
    at: input_datetime.air_freshener_on_time
  - platform: time
    at: input_datetime.air_freshener_off_time
  - platform: zone
    entity_id: person.richard
    zone: zone.home
    event: leave
    enabled: false
  - platform: zone
    entity_id: person.richard
    zone: zone.home
    event: enter
    enabled: false
  - platform: zone
    entity_id: person.lucy
    zone: zone.home
    event: enter
    enabled: false
  - platform: zone
    entity_id: person.lucy
    zone: zone.home
    event: leave
    enabled: false
  - platform: state
    entity_id:
    - person.lucy
    to:
    for:
      hours: 0
      minutes: 5
      seconds: 0
    enabled: true
  - platform: state
    entity_id:
    - person.richard
    to:
    for:
      hours: 0
      minutes: 5
      seconds: 0
    enabled: true
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: time
          after: input_datetime.air_freshener_on_time
          before: input_datetime.air_freshener_off_time
        - condition: or
          conditions:
          - condition: state
            entity_id: person.lucy
            state: home
          - condition: state
            entity_id: person.richard
            state: home
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.plug_in_air_freshener_1
        data: {}
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: switch.turn_on
        target:
          entity_id:
          - switch.plug_in_air_freshener_2
        data: {}
    default:
    - service: switch.turn_off
      target:
        entity_id:
        - switch.plug_in_air_freshener_1
      data: {}
    - delay:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - service: switch.turn_off
      target:
        entity_id:
        - switch.plug_in_air_freshener_2
      data: {}
  mode: restart
- id: '1576601770197'
  alias: Welcome home Lucy
  description: 'Note: These actions can only be edited with YAML'
  trigger:
  - entity_id: person.lucy
    for: 00:05:00
    from: not_home
    platform: state
    to: home
  condition: []
  action:
  - data_template:
      cache: false
      entity_id: media_player.ground_floor
      message: "Welcome home Lucy. {% if is_state(\"person.richard\", \"home\")  %}
        Richard is also at home, please see him for cuddles! {%- else -%}\n    Richard
        is currently {{states('person.richard')}}, at\n{{states('sensor.richard_street_location')}}.
        {%- endif %} The heating is set to {{states('climate.entryway')}} at {{state_attr('climate.entryway',
        'temperature')| round(0) }}°C\n"
    service: tts.google_translate_say
- id: '1576602219341'
  alias: Keep Nest thermostat aware of our presence
  description: contindion template {{ state_attr('climate.entryway', 'preset_mode')
    == Away and Eco }}
  trigger:
  - minutes: /10
    platform: time_pattern
  - event: start
    platform: homeassistant
  - entity_id: binary_sensor.huishs_away
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: group.mobiles_group
    state: home
  - condition: state
    entity_id: binary_sensor.huishs_away
    state: 'on'
  action:
  - data:
      away_mode: home
    service: nest.set_away_mode
  - data:
      message: Nest forced back to heat mode while you are at home.
    service: notify.google_cloud_notify
- id: '1576603673930'
  alias: Close Chicken Door In The Evening Via Notification (action button has been
    clicked)
  description: Notification HTML5 push notification action button clicked
  trigger:
  - event_data:
      action: close_door
    event_type: html5_notification.clicked
    platform: event
  condition: []
  action:
  - entity_id: cover.chicken_coop_door
    service: cover.close_cover
  mode: single
- id: '1576603849046'
  alias: Close Chicken Door In The Evening Via Notification
  description: ''
  trigger:
  - event: sunset
    platform: sun
    offset: 01:30:00
  condition:
  - condition: state
    entity_id: binary_sensor.chicken_coop_status
    state: 'on'
  action:
  - service: notify.google_cloud_notify
    data:
      title: Chicken Bed-Time? [Home Assistant]
      message: It's dark, close chicken coop door?
      data:
        actions:
        - action: close_door
          title: "\U0001F6AACLOSE DOOR \U0001F414"
  mode: single
- id: '1581770041173'
  alias: 'Notify: Electricity supply voltage is LOW/HIGH'
  description: Send Notification when Electricity Voltage is Low or High
  trigger:
  - above: '254'
    entity_id: sensor.myups_input_voltage
    platform: numeric_state
  - below: '220'
    entity_id: sensor.myups_input_voltage
    platform: numeric_state
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.myups_input_voltage
        below: '220'
      sequence:
      - data:
          title: Electricity Supply Voltage Low
          message: 'Electricity Voltage Low: {{ states(''sensor.myups_input_voltage'')
            }} Volts. {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

            '
        service: notify.google_cloud_notify
      - service: notify.pushover_notify
        data:
          title: Electricity Supply Voltage Low
          message: 'Electricity Voltage Low: {{ states(''sensor.myups_input_voltage'')
            }} Volts. {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

            '
    - conditions:
      - condition: numeric_state
        entity_id: sensor.myups_input_voltage
        above: '254'
      sequence:
      - data:
          title: Electricity Supply Voltage High
          message: 'Electricity Voltage High: {{ states(''sensor.myups_input_voltage'')
            }} Volts. {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

            '
        service: notify.google_cloud_notify
- id: '1581770321118'
  alias: 'Notify: UPS is close to being depleted'
  description: Send Notification when UPS is about to shutdown (10 mins left)
  trigger:
  - below: 600
    entity_id: sensor.myups_battery_runtime
    platform: numeric_state
  condition: []
  action:
  - data:
      message: 'UPS is running low: {{ (((states(''sensor.myups_battery_runtime'')
        | int) / 60) | int  )}} minutes left. {{now().strftime(''%Y-%m-%d %I:%M %p'')}}

        '
      title: 'WARNING: UPS close to being depleted'
    service: notify.google_cloud_notify
- id: '1581773259354'
  alias: Bunny shed status monitor notify
  description: Monitor the health of my gateways
  trigger:
  - entity_id: binary_sensor.bs_status
    for:
      hours: 0
      minutes: 10
      seconds: 0
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      message: Bunny Shed Controller has been offline for 10 mins. {{now().strftime('%Y-%m-%d
        %I:%M %p')}}
      title: Irrigation offline
    service: notify.google_cloud_notify
- id: '1581773123827'
  alias: 'Notify: Possible DDOS attack'
  trigger:
  - above: '70000'
    entity_id: sensor.pi_hole_dns_queries_today
    platform: numeric_state
  action:
  - data:
      message: 'DNS Queries: {{ states(''sensor.pi_hole_dns_queries_today'') }}

        '
      title: Possible DDOS Attack from inside network
    service: notify.google_cloud_notify
- id: '1581123123827'
  alias: Simulate Presence Lights
  description: Automation Simulate Presence / Occupancy Simulation. Runs single and
    if we get home it will turn off all the lights (cancel the run)
  trigger:
  - entity_id:
    - person.richard
    from: home
    platform: state
    to:
  - entity_id:
    - person.lucy
    from: home
    platform: state
    to: not_home
  - event: sunset
    offset: +00:30:00
    platform: sun
  - event_type: event_simulate_presence
    platform: event
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    - before: '23:55:00'
      condition: time
    - condition: state
      entity_id: input_boolean.simulate_presence_enable
      state: 'on'
    - condition: state
      entity_id: person.lucy
      state: not_home
    - condition: state
      entity_id: person.richard
      state: not_home
  action:
  - data_template:
      entity_id: '{{ state_attr(''light.presence_simulation_lights'', ''entity_id'')
        | random }}'
    service: light.turn_on
  - delay: 00:{{ (range(10, 30) | random) }}:00
  - if:
    - condition: or
      conditions:
      - condition: time
        after: '11:50:00'
      - condition: state
        entity_id: person.lucy
        state: home
      - condition: state
        entity_id: person.richard
        state: home
    then:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.presence_simulation_lights
  - data_template:
      entity_id: '{{ state_attr(''light.presence_simulation_lights'', ''entity_id'')
        | random }}'
    service: light.turn_on
  - delay: 00:{{ (range(10, 30) | random) }}:00
  - data_template:
      entity_id: '{{ state_attr(''light.presence_simulation_lights'', ''entity_id'')
        | random }}'
    service: light.turn_off
  - if:
    - condition: or
      conditions:
      - condition: time
        after: '11:50:00'
        enabled: false
      - condition: state
        entity_id: person.lucy
        state: home
      - condition: state
        entity_id: person.richard
        state: home
    then:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.presence_simulation_lights
  - event: event_simulate_presence
  mode: single
- id: '1590103997253'
  alias: 'Server Getting Hot '
  description: ''
  trigger:
  - above: '65'
    entity_id: sensor.server_server_raid_controller_temperature
    platform: numeric_state
  condition: []
  action:
  - data:
      message: Server is getting HOT!
    service: notify.google_cloud_notify
- id: '1592486159377'
  alias: Parcel Box Opened Notify - Rev 1
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 2aadd916ad46270ecda5ab407a461e6c
    entity_id: binary_sensor.parcel_box_contact
    domain: binary_sensor
  condition: []
  action:
  - data:
      message: Parcel box has just been opened
      title: Delivery
    service: notify.pushover_notify
    enabled: false
  - data:
      filename: /config/www/tmp/drive.jpg
    entity_id: camera.drive_high_16
    service: camera.snapshot
    enabled: false
  - data:
      data:
        attachment: /config/www/tmp/drive.jpg
      message: Delivery person?
      title: Driveway CCTV Photo
    service: notify.pushover_notify
    enabled: false
  - data:
      cache: false
      entity_id: media_player.whole_house
      message: Parcel box has just been opened
    service: tts.google_translate_say
    enabled: false
  - service: notify.mobile_app_rich_mob_app
    data:
      message: Parcel Box Opened
      data:
        image: /api/camera_proxy/camera.garage_13
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
    enabled: true
  - service: notify.mobile_app_lucy_mob_app
    data:
      message: Front Door Doorbell
      data:
        image: /api/camera_proxy/camera.garage_13
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
    enabled: true
  - data:
      filename: /config/www/tmp/garage.jpg
    service: camera.snapshot
    enabled: false
    target:
      entity_id:
      - camera.garage_13
  - service: notify.mobile_app_rich_mob_app
    data:
      message: Parcel Box Opened
      data:
        image: /local/tmp/garage.jpg
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
    enabled: false
  mode: single
- id: '1601037277352'
  alias: Proximity/Perimeter Warning System - Primary and Secondary Zone Failure
  description: ''
  trigger:
  - platform: zone
    entity_id: device_tracker.google_maps_113691586554404814686
    zone: zone.outer_perimeter
    event: enter
  - platform: zone
    entity_id: device_tracker.google_maps_113691586554404814686
    zone: zone.inner_perimeter
    event: enter
  condition:
  - condition: or
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
  action:
  - choose:
    - conditions:
      - condition: zone
        entity_id: device_tracker.google_maps_113691586554404814686
        zone: zone.inner_perimeter
      sequence:
      - service: notify.google_cloud_notify
        data:
          message: '!!Primary Zone Failure - Inner Perimeter!!'
      - service: notify.pushover_notify
        data:
          message: '!!Primary Zone Failure - Inner Perimeter!!'
          title: '!!Primary Zone Failure - Inner Perimeter!!'
          data:
            sound: alien
            priority: 1
      - service: script.flash_dining_room_lights
      - service: script.flash_dining_room_lights
      - data:
          cache: false
          entity_id: media_player.whole_house
          message: WOOP! WOOP! WOOP! WOOP! WOOP! ALERT:Warning! Primary Zone Failure!
            Warning! Primary Zone Failure! Warning! Primary Zone Failure! Close the
            fucking doors and windows for the love of bunnies hide! Arg!!!!
        service: tts.google_translate_say
    - conditions:
      - condition: zone
        entity_id: device_tracker.google_maps_113691586554404814686
        zone: zone.outer_perimeter
      sequence:
      - service: notify.google_cloud_notify
        data:
          message: Secondary Zone Failure - Outer Perimeter
      - service: notify.pushover_notify
        data:
          message: Secondary Zone Failure - Outer Perimeter
          title: Secondary Zone Failure - Outer Perimeter
          data:
            sound: tugboat
            priority: 0
      - data:
          cache: false
          entity_id: media_player.whole_house
          message: Notice! Secondary Zone Failure! Secondary Zone Failure - Outer
            Perimeter - Outer Perimeter
        service: tts.google_translate_say
  mode: single
- id: '1601317646616'
  alias: Front Lawn Anti Cat Defences
  description: Front Lawn Anti Cat Defence
  trigger:
  - type: motion
    platform: device
    device_id: 99689212065c11ebbd2ecbef1587dfe1
    entity_id: binary_sensor.drive_high_16_vmd4_camera1profile2
    domain: binary_sensor
  condition:
  - condition: time
    after: input_datetime.fld_active_start
    before: input_datetime.fld_active_till
  - type: is_no_motion
    condition: device
    device_id: ed137229065c11eb8030a1dacd09fb94
    entity_id: binary_sensor.p3224_lv_0_vmd4_camera1profile2
    domain: binary_sensor
  - condition: device
    type: is_off
    device_id: 1a18e37d81f9eaee6c1870e944461b6b
    entity_id: light.outside_1_down
    domain: light
  - condition: numeric_state
    entity_id: weather.openweathermap
    attribute: temperature
    above: 3
  - type: is_not_open
    condition: device
    device_id: 86b815b15cbf84a75984db3b46f6cc17
    entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
    domain: binary_sensor
  action:
  - service: switch.turn_on
    entity_id: switch.front_garden_lawn_irrigation_valve
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{ states(''input_number.fld_water_on_time'')|float }}'
      milliseconds: 0
  - service: switch.turn_off
    entity_id: switch.front_garden_lawn_irrigation_valve
  mode: restart
- id: '1607604378569'
  alias: AutoHotKey - Webhook Driven - Busy Light - Process Presence Incoming Webhook
  description: 'If the automation is not restarted within 6 minutes due to a new incoming
    webhook, the status is changed to offline.  Ref: https://github.com/ajobbins/AHK-Teams-Presence'
  trigger:
  - platform: webhook
    webhook_id: 6pKQYcAJY3kWdj56MVUYb4tWLr9QmGP7kKYBd5rMBz9r6ZBrQXyKhJPbuYR3vVkV
    allowed_methods:
    - POST
    - PUT
    local_only: true
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: '{{ trigger.json.status }}'
    entity_id: input_text.autohotkey1
  - delay: 00:06:00
  - service: input_text.set_value
    data:
      value: Offline
    entity_id: input_text.autohotkey1
  mode: restart
- id: '1607605238090'
  alias: AutoHotKey - Webhook Driven - Busy Light - Change Busy Light Colours
  description: 'Change an RGB light to signal presence. Ref: https://github.com/ajobbins/AHK-Teams-Presence'
  trigger:
  - platform: state
    entity_id: input_text.autohotkey1
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Available
      sequence:
      - service: light.turn_on
        data:
          color_name: green
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_2
          - light.busy_light_1
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Busy
      sequence:
      - service: light.turn_on
        data:
          color_name: red
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_2
          - light.busy_light_1
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: On The Phone
      sequence:
      - service: light.turn_on
        data:
          color_name: orange
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_2
          - light.busy_light_1
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: In A Meeting
      sequence:
      - service: light.turn_on
        data:
          color_name: orange
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_2
          - light.busy_light_1
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Do Not Disturb
      sequence:
      - service: light.turn_on
        data:
          color_name: blueviolet
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_2
          - light.busy_light_1
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Focusing
      sequence:
      - service: light.turn_on
        data:
          color_name: blueviolet
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_2
          - light.busy_light_1
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Presenting
      sequence:
      - service: light.turn_on
        data:
          color_name: red
          transition: 3
          brightness_pct: 100
        target:
          entity_id:
          - light.busy_light_2
          - light.busy_light_1
    - conditions:
      - condition: state
        entity_id: input_text.autohotkey1
        state: Away
      sequence:
      - service: light.turn_off
        target:
          entity_id:
          - light.busy_light_2
          - light.busy_light_1
        data:
          transition: 3
    default:
    - service: light.turn_off
      data:
        transition: 3
      target:
        entity_id:
        - light.busy_light_2
        - light.busy_light_1
  mode: restart
- id: '1612985120601'
  alias: obsolete - Ice Maker - On-Off Schedule [Blueprint]
  description: There is a separate automation which turns the ice maker on if the
    water temperature gets too warm. Also triggered by Fire Custom Event "ice_maker_back_online".
  use_blueprint:
    path: EPMatt/on_off_schedule_state_persistence.yaml
    input:
      off_time: '23:30:00'
      automation_target:
        entity_id: switch.ice_maker_switch
      on_time: 08:30:00
      trigger_at_homeassistant_startup: true
      custom_trigger_event: ice_maker_back_online
- id: '1612985880086'
  alias: 'obsolete - Ice Maker - Water High Temperature Action '
  description: Turn on the ice maker for a set time if the water temperature goes
    above a set threshold. Only run if ice maker is not already on.
  trigger:
  - platform: numeric_state
    entity_id: sensor.ice_maker_water_temperature
    above: input_number.ice_maker_water_high_temperature_threshold
  condition:
  - condition: device
    type: is_off
    device_id: 78678bdb2e4faa8982a4681b31f899ba
    entity_id: switch.ice_maker_switch
    domain: switch
    enabled: false
  action:
  - type: turn_on
    device_id: 78678bdb2e4faa8982a4681b31f899ba
    entity_id: switch.ice_maker_switch
    domain: switch
    enabled: false
  - delay:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: 78678bdb2e4faa8982a4681b31f899ba
    entity_id: switch.ice_maker_switch
    domain: switch
    enabled: false
  mode: single
- id: '1619906809678'
  alias: Outside Lights - House Number Sign Light Schedule
  description: ' Use wait to ensure the Choose action for time is after the trigger
    time, not on the time.'
  trigger:
  - platform: sun
    event: sunset
    offset: +00:30:00
  - platform: time
    at: input_datetime.house_sign_light_off_time
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.house_sign_light_off_time
      sequence:
      - service: light.turn_off
        target:
          entity_id:
          - light.outside_2_down
        data: {}
    - conditions:
      - condition: and
        conditions:
        - condition: sun
          after: sunset
        - condition: time
          before: input_datetime.house_sign_light_off_time
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 1
          color_temp: 250
        target:
          entity_id:
          - light.outside_2_down
    default:
    - service: light.turn_off
      target:
        entity_id:
        - light.outside_2_down
      data: {}
  mode: single
- id: '1621103260448'
  alias: Ice Maker - On-Off Automation
  description: 'On-Off Schedule with presence awareness, state restoration and high
    temperature alarm (Turn on the ice maker for a set time if the water temperature
    goes above a set threshold. Only run if ice maker is not already on). Removes
    the previous blueprint and other automations. Note: Zone trigger does not support
    delay, hence the use of the state trigger for presence awareness (to avoid frequent  switch
    cycling whilst at home with poor location accuracy)'
  trigger:
  - platform: time
    at: input_datetime.ice_maker_on_time
  - platform: time
    at: input_datetime.ice_maker_off_time
  - platform: homeassistant
    event: start
  - type: connected
    platform: device
    device_id: 78678bdb2e4faa8982a4681b31f899ba
    entity_id: binary_sensor.ice_maker_status
    domain: binary_sensor
    enabled: false
  - platform: zone
    entity_id: person.richard
    zone: zone.home
    event: leave
  - platform: zone
    entity_id: person.richard
    zone: zone.home
    event: enter
  - platform: numeric_state
    entity_id: sensor.ice_maker_water_temperature
    above: input_number.ice_maker_water_high_temperature_threshold
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.ice_maker_off_time
      sequence:
      - type: turn_off
        device_id: 78678bdb2e4faa8982a4681b31f899ba
        entity_id: switch.ice_maker_switch
        domain: switch
        enabled: false
    - conditions:
      - condition: time
        after: input_datetime.ice_maker_on_time
        before: input_datetime.ice_maker_off_time
      - condition: zone
        entity_id: person.richard
        zone: zone.home
      sequence:
      - type: turn_on
        device_id: 78678bdb2e4faa8982a4681b31f899ba
        entity_id: switch.ice_maker_switch
        domain: switch
        enabled: false
    - conditions:
      - condition: numeric_state
        entity_id: sensor.ice_maker_water_temperature
        above: input_number.ice_maker_water_high_temperature_threshold
      - condition: device
        type: is_off
        device_id: 78678bdb2e4faa8982a4681b31f899ba
        entity_id: switch.ice_maker_switch
        domain: switch
        enabled: false
      sequence:
      - type: turn_on
        device_id: 78678bdb2e4faa8982a4681b31f899ba
        entity_id: switch.ice_maker_switch
        domain: switch
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
      - type: turn_off
        device_id: 78678bdb2e4faa8982a4681b31f899ba
        entity_id: switch.ice_maker_switch
        domain: switch
        enabled: false
    default:
    - type: turn_off
      device_id: 78678bdb2e4faa8982a4681b31f899ba
      entity_id: switch.ice_maker_switch
      domain: switch
      enabled: false
  mode: restart
- id: '1621109022540'
  alias: Close Chicken Door  Notification (App)
  description: ''
  trigger:
  - event: sunset
    platform: sun
    offset: 01:30:00
  condition:
  - type: is_connected
    condition: device
    device_id: 40e46b6c7835f9e576bf8c7d148b90ea
    entity_id: binary_sensor.chicken_house_sensor_status
    domain: binary_sensor
  action:
  - service: notify.mobile_app_pixel_4_app
  mode: single
- id: '1626459943924'
  alias: Water on off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.button_1
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - switch.button_1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.button_1
        state: 'on'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.back_garden_irrigation_valve
        data: {}
    - conditions:
      - condition: state
        entity_id: switch.button_1
        state: 'off'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.back_garden_irrigation_valve
        data: {}
    default: []
  mode: single
- id: '1634179399421'
  alias: Notify when Lucy leaves her pump at home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.lucy
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
    enabled: true
  condition:
  - condition: zone
    entity_id: device_tracker.insulin_pump_controller
    zone: zone.home
  action:
  - service: notify.mobile_app_rich_mob_app
    data:
      message: Lucy's Insulin pump controller may have been left at Home!
      data:
        color: red
        channel: PumpController
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:pump
      title: Pump Controller
  - service: notify.mobile_app_lucy_mob_app
    data:
      message: Lucy Pump Controller was left at Home!
  mode: single
- id: '1635187432504'
  alias: Outside Lights Motion Slow Fade
  description: Main Lights Profile
  trigger:
  - type: motion
    platform: device
    device_id: 99689212065c11ebbd2ecbef1587dfe1
    entity_id: binary_sensor.drive_high_16_vmd4_camera1profile3
    domain: binary_sensor
  - type: opened
    platform: device
    device_id: 86b815b15cbf84a75984db3b46f6cc17
    entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
    domain: binary_sensor
  condition:
  - condition: or
    conditions:
    - condition: sun
      after: sunset
      after_offset: '0'
    - condition: sun
      before: sunrise
      before_offset: -00:30:00
  action:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.outside_lights_late_night_start_time
        before: input_datetime.outside_lights_late_night_end_time
      sequence:
      - target:
          entity_id:
          - light.outside_1_down
          - light.outside_2_down
          - light.outside_3_down
          - light.outside_4_down
          - light.outside_5_down
        data:
          brightness_pct: '{{ states(''input_number.outside_lights_late_night_brightness'')
            | int(0) }}'
          color_temp: 370
          transition: 5
        action: light.turn_on
      - delay:
          minutes: '{{ states(''input_number.outside_lights_late_night_time_on_minutes'')
            | int(0) }}'
    default:
    - target:
        entity_id:
        - light.outside_1_down
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_2_down
      data:
        color_temp: 370
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_3_down
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_4_down
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_5_down
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_4_up
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_3_up
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_2_up
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        milliseconds: '{{ states(''input_number.outside_lights_early_night_time_between_lights_milliseconds'')
          | int(0) }}'
    - target:
        entity_id:
        - light.outside_1_up
      data:
        brightness_pct: '{{ states(''input_number.outside_lights_early_night_brightness'')
          | int(0) }}'
        transition: '{{ states(''input_number.outside_lights_early_night_per_light_transition_time_seconds'')
          | int(0) }}'
      action: light.turn_on
    - delay:
        minutes: '{{ states(''input_number.outside_lights_early_night_time_on_minutes'')
          | int(0) }}'
  - target:
      entity_id:
      - light.outside_1_up
      - light.outside_1_down
      - light.outside_2_up
      - light.outside_2_down
      - light.outside_3_up
      - light.outside_3_down
      - light.outside_4_up
      - light.outside_4_down
      - light.outside_5_down
    data:
      transition: 20
    action: light.turn_off
  - if:
    - condition: time
      after: '16:00:00'
    then:
    - delay:
        hours: 0
        minutes: 0
        seconds: 2
        milliseconds: 0
    - target:
        entity_id: light.outside_2_down
      data:
        color_temp: 250
        brightness_pct: 1
      action: light.turn_on
  mode: restart
- id: '1652210144322'
  alias: House Doorbell - Local Notify
  description: CCTV needs to have anonymous viewer enabled or I need to pass the username
    in the media_content_id. Note, during testing you need to turn off the media_player
    device after each test, else is will not show the video again. (local media-source
    is 30 seconds behind!)
  trigger:
  - type: turned_on
    platform: device
    device_id: b03ab12c707340e8849888171a79caed
    entity_id: 7c6911b35b21b35fae0f55d88984a7d9
    domain: binary_sensor
  condition:
  - condition: or
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
  action:
  - service: media_player.turn_off
    data: {}
    target:
      entity_id:
      - media_player.office_display
      - media_player.living_room_display
      - media_player.kitchen_display
      - media_player.dining_room_display
    enabled: false
  - service: notify.google_assistant_sdk
    data:
      message: Ding! Dong! Someone is at the door
      target:
      - bathroom_speaker
      - garage
      - guest_bedroom
      - bedroom
    enabled: false
  - service: notify.google_assistant_sdk
    data:
      message: Someone is at the front door
  - service: media_player.play_media
    target:
      entity_id: media_player.office_display
    data:
      media_content_id: media-source://camera/camera.front_door_11
      media_content_type: application/vnd.apple.mpegurl
    metadata:
      title: Front Door .11
      thumbnail: /api/camera_proxy/camera.front_door_11
      media_class: video
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://camera
    enabled: false
  - service: media_player.play_media
    target:
      entity_id: media_player.living_room_display
    data:
      media_content_id: media-source://camera/camera.front_door_11
      media_content_type: application/vnd.apple.mpegurl
    metadata:
      title: Front Door .11
      thumbnail: /api/camera_proxy/camera.front_door_11
      media_class: video
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://camera
    enabled: false
  - service: media_player.play_media
    target:
      entity_id: media_player.dining_room_display
    data:
      media_content_id: media-source://camera/camera.drive_high_16
      media_content_type: application/vnd.apple.mpegurl
    metadata:
      title: Drive High .16
      thumbnail: /api/camera_proxy/camera.drive_high_16
      media_class: video
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://camera
    enabled: false
  - service: media_player.play_media
    target:
      entity_id: media_player.kitchen_display
    data:
      media_content_id: media-source://camera/camera.front_door_11
      media_content_type: application/vnd.apple.mpegurl
    metadata:
      title: Front Door .11
      thumbnail: /api/camera_proxy/camera.front_door_11
      media_class: video
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://camera
    enabled: false
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
    enabled: false
  - parallel:
    - service: media_player.play_media
      data:
        media_content_id: http://192.168.4.11/axis-cgi/mjpg/video.cgi
        media_content_type: image/jpg
      target:
        entity_id:
        - media_player.office_display
        - media_player.living_room_display
        - media_player.kitchen_display
      enabled: false
    - service: media_player.play_media
      data:
        media_content_id: media-source://camera/camera.front_door_11
        media_content_type: application/vnd.apple.mpegurl
      target:
        entity_id:
        - media_player.office_display
        - media_player.living_room_display
        - media_player.kitchen_display
      enabled: false
    - service: camera.play_stream
      data:
        format: hls
        media_player: media_player.office_display
      target:
        entity_id: camera.front_door_11_onvif_video
      enabled: false
    - service: camera.play_stream
      data:
        format: hls
        media_player: media_player.office_display
      target:
        entity_id:
        - camera.front_door_11_mjpg
      enabled: false
    - service: camera.play_stream
      data:
        format: hls
        media_player: media_player.office_display
      target:
        entity_id:
        - camera.front_door_11
      enabled: false
    - service: tts.google_translate_say
      data:
        message: Ding! Dong! Someone is at the door
        entity_id: media_player.bathroom_speaker, media_player.garage, media_player.guest_bedroom
        cache: true
      enabled: false
    - service: notify.google_assistant_sdk
      data:
        message: Ding! Dong! Someone is at the door
        target:
        - bathroom_speaker
        - garage
        - guest_bedroom
        - bedroom
    - service: media_player.play_media
      target:
        entity_id: media_player.living_room_display
      data:
        media_content_id: media-source://camera/camera.front_door_11_onvif_video
        media_content_type: application/vnd.apple.mpegurl
      metadata:
        title: Front Door .11 ONVIF profile_1 h264
        thumbnail: /api/camera_proxy/camera.front_door_11_onvif_video
        media_class: video
        children_media_class:
        navigateIds:
        - {}
        - media_content_type: app
          media_content_id: media-source://camera
    - service: media_player.play_media
      target:
        entity_id: media_player.dining_room_display
      data:
        media_content_id: media-source://camera/camera.drive_higher_21_onvif_profile_1_h264
        media_content_type: application/vnd.apple.mpegurl
      metadata:
        title: Drive Higher .21 ONVIF profile_1 h264
        thumbnail: /api/camera_proxy/camera.drive_higher_21_onvif_profile_1_h264
        media_class: video
        children_media_class:
        navigateIds:
        - {}
        - media_content_type: app
          media_content_id: media-source://camera
    - service: media_player.play_media
      target:
        entity_id: media_player.office_display
      data:
        media_content_id: media-source://camera/camera.front_door_11_onvif_video
        media_content_type: application/vnd.apple.mpegurl
      metadata:
        title: Front Door .11 ONVIF profile_1 h264
        thumbnail: /api/camera_proxy/camera.front_door_11_onvif_video
        media_class: video
        children_media_class:
        navigateIds:
        - {}
        - media_content_type: app
          media_content_id: media-source://camera
      enabled: true
    - service: media_player.play_media
      target:
        entity_id: media_player.kitchen_display
      data:
        media_content_id: media-source://camera/camera.front_door_11_onvif_video
        media_content_type: application/vnd.apple.mpegurl
      metadata:
        title: Front Door .11 ONVIF profile_1 h264
        thumbnail: /api/camera_proxy/camera.front_door_11_onvif_video
        media_class: video
        children_media_class:
        navigateIds:
        - {}
        - media_content_type: app
          media_content_id: media-source://camera
    enabled: false
  mode: single
- id: '1659697088299'
  alias: Garden Watering Remote Control Ikea Blind Open
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 81786cb2bdf60505bef7710dd57270ae
    type: action
    subtype: open
    discovery_id: 0x000d6ffffea20000 action_open
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.back_garden_irrigation_valve
  mode: single
- id: '1659697287602'
  alias: Garden Watering Remote Control Ikea Blind Close
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 81786cb2bdf60505bef7710dd57270ae
    type: action
    subtype: close
    discovery_id: 0x000d6ffffea20000 action_close
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.back_garden_irrigation_valve
  mode: single
- id: '1661547535107'
  alias: Occupancy Kitchen (Rev 1) (With Christmas Tree)
  description: Triggered in motion, restarted on fresh motion detection (sensors set
    to 90 second timeout). On timer delay turn-off section, checks if motion is still
    being detected, to avoid issue with motion being continuity detected for entire
    delay period (otherwise lights would turn off, as no new motion events had been
    generated, even though motion is still true). Could set the automation to only
    turn off lights when no motion is detected, but this may risk the lights staying
    on all the time if off-motion event is not triggered.
  trigger:
  - type: occupied
    platform: device
    device_id: ae2a09aff2b5e7ef8155aa0aea2ae997
    entity_id: 7183e77199aa9682d16c03a011352ead
    domain: binary_sensor
  - type: occupied
    platform: device
    device_id: 8f93f025843a9a3da3c079739843e408
    entity_id: 396dab2b22de1017ada5e53201d6abe0
    domain: binary_sensor
  - platform: event
    event_type: kitchen_occupied
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        after: 02:00:00
        before: 07:00:00
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          brightness_pct: 50
        target:
          device_id: 061e0dd32d43fd2355543b4f4db149ac
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
      - choose:
        - conditions:
          - condition: or
            conditions:
            - type: is_motion
              condition: device
              device_id: ae2a09aff2b5e7ef8155aa0aea2ae997
              entity_id: binary_sensor.kitchen_motion_sensor_1_occupancy
              domain: binary_sensor
            - type: is_motion
              condition: device
              device_id: 8f93f025843a9a3da3c079739843e408
              entity_id: binary_sensor.kitchen_motion_sensor_2_occupancy
              domain: binary_sensor
          sequence:
          - event: kitchen_occupied
            event_data: {}
        default:
        - service: light.turn_off
          data:
            transition: 20
          target:
            entity_id:
            - light.kitchen
    default:
    - service: light.turn_on
      data:
        transition: 2
        brightness_pct: 100
      target:
        entity_id:
        - light.kitchen_lights
    - if:
      - condition: state
        entity_id: light.christmas_tree_lights
        state: 'off'
      then:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.christmas_tree_lights
        enabled: true
    - delay:
        hours: 0
        minutes: 10
        seconds: 0
        milliseconds: 0
    - choose:
      - conditions:
        - condition: or
          conditions:
          - type: is_occupied
            condition: device
            device_id: ae2a09aff2b5e7ef8155aa0aea2ae997
            entity_id: 7183e77199aa9682d16c03a011352ead
            domain: binary_sensor
          - type: is_occupied
            condition: device
            device_id: 8f93f025843a9a3da3c079739843e408
            entity_id: 396dab2b22de1017ada5e53201d6abe0
            domain: binary_sensor
        sequence:
        - event: kitchen_occupied
          event_data: {}
      default:
      - service: light.turn_off
        data:
          transition: 20
        target:
          entity_id:
          - light.kitchen_lights
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.christmas_tree_lights
        enabled: true
  mode: restart
- id: '1666971475237'
  alias: Low battery level detection & notification for all battery sensors [Blueprint]
  description: 'Updated 2023 10 13

    '
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      time: '17:00:00'
      actions:
      - service: notify.mobile_app_rich_mob_app
        data:
          title: Battery Level
          message: Battery low {{sensors}}
          data:
            color: purple
            channel: Battery
            notification_icon: mdi:battery-alert-variant-outline
      - service: persistent_notification.create
        data:
          title: Battery Low
          message: Battery low {{sensors}}
      threshold: 15
      day: 6
- id: '1667140350137'
  alias: Smoke Machine - Lights
  description: ' [Restarts]

    '
  trigger:
  - type: motion
    platform: device
    device_id: 853ca02c816df4ce4860c07060837a6a
    entity_id: binary_sensor.front_door_11_vmd4_camera1profile2
    domain: binary_sensor
    enabled: false
  - type: motion
    platform: device
    device_id: 83dd8340e23fb86fef21b09a22a57929
    entity_id: binary_sensor.drive_higher_21_vmd4_camera1profile2
    domain: binary_sensor
  - platform: state
    entity_id:
    - switch.smoke_machine
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.0x5c0272fffec8ba7e
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
    enabled: true
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.0x5c0272fffec8ba7e
  mode: restart
- id: '1667142302076'
  alias: Smoke Machine Automation - Reset Switch
  description: Remote is "Off" only, so this resets the switch back to "On"
  trigger:
  - platform: state
    entity_id:
    - switch.smoke_machine
    to: 'off'
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.smoke_machine
    enabled: false
  mode: single
- id: '1671628022949'
  alias: Christmas Lights Timer
  description: ''
  trigger:
  - platform: sun
    event: sunset
    id: 'ON'
  - platform: time
    at: '23:30:00'
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.outside_christmas_lights
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.outside_christmas_lights
  mode: single
- id: '1674941449370'
  alias: Energenie eTRV Calibrate Once a Week
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
  condition:
  - condition: time
    weekday:
    - sun
  action:
  - device_id: 061f81b04836d8e074d7e2542b21767c
    domain: select
    entity_id: 551713a2c8fe453796e77dd1e0796152
    type: select_option
    option: Exercise Valve
  - device_id: a46ff2f2479fd7381a267a77a12734ae
    domain: select
    entity_id: f18942e23b5ba88013eab01ead452bd6
    type: select_option
    option: Exercise Valve
  - device_id: e79922e5a787ed8db81ee253715ea823
    domain: select
    entity_id: ba0a113a1b8f3c61503ffd672bd48629
    type: select_option
    option: Exercise Valve
  - device_id: 55d26468639a4f1005742215878de937
    domain: select
    entity_id: c1d57e0aff19de01e97c8f36a0d112d7
    type: select_option
    option: Exercise Valve
  - device_id: f694a04cab17376f9ccbb97b67b6365d
    domain: select
    entity_id: 74de4da403c24cdb7e582b30d56bc168
    type: select_option
    option: Exercise Valve
  - device_id: 9fb3ba0a224918b6c1b43afbcc3c1f23
    domain: select
    entity_id: 47be01fbbccb610bccabc298ad1e103c
    type: select_option
    option: Exercise Valve
  - device_id: edd53a3020762c37680c07cc4c38d557
    domain: select
    entity_id: 2c591391732f9048068e2aede02816ae
    type: select_option
    option: Exercise Valve
  - device_id: b1e80b075b7aff30c3ef1b6e6b022e25
    domain: select
    entity_id: b73067f185ccb68fd06a1add939d4730
    type: select_option
    option: Exercise Valve
  - device_id: 71e963eadf1071d0f777742a6fbb5cf9
    domain: select
    entity_id: 4a3fe856a731d274a9eb0c1303ec77c8
    type: select_option
    option: Exercise Valve
  - device_id: a9d1acaaf374a3234065ce3dca7d9f04
    domain: select
    entity_id: 859d0eff621e79af1a77a0a152a21a04
    type: select_option
    option: Exercise Valve
  mode: single
- id: '1689364304362'
  alias: Irrigation Notify When Controllers Goes Offline
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.ic_back_status
    to:
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.ic_front_status
    to:
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_rich_mob_app
    data:
      message: Irrigation Controller Offline
      data:
        channel: Irrigation
        importance: default
        visibility: public
        notification_icon: mdi:water-alert-outline
    enabled: true
  mode: queued
- id: '1694715667268'
  alias: Parcel Box Opened Notify - Rev 2
  description: Take photo first, rather than using camera_proxy, as camera_proxy only
    takes the image when the notification is delivered, which may be later if signal
    is poor.
  trigger:
  - type: opened
    platform: device
    device_id: 2aadd916ad46270ecda5ab407a461e6c
    entity_id: binary_sensor.parcel_box_contact
    domain: binary_sensor
    enabled: false
  - platform: state
    entity_id:
    - binary_sensor.parcel_box_contact
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: camera.snapshot
    data:
      filename: /media/garage.jpg
    target:
      entity_id: camera.garage_13
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Parcel Box
      message: Parcel Box Opened
      data:
        image: /media/local/garage.jpg
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
  - service: notify.mobile_app_lucy_mob_app
    data:
      title: Parcel Box
      message: Parcel Box Opened
      data:
        image: /media/local/garage.jpg
        color: green
        channel: ParcelBox1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
  - service: camera.snapshot
    data:
      filename: /media/garage2.jpg
    target:
      entity_id:
      - camera.drive_higher_21
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Parcel Box
      message: Parcel Box Opened Photo 2
      data:
        image: /media/local/garage2.jpg
        color: green
        channel: ParcelBox2
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
        sticky: 'true'
  - service: notify.mobile_app_lucy_mob_app
    data:
      title: Parcel Box
      message: Parcel Box Opened Photo 2
      data:
        image: /media/local/garage2.jpg
        color: green
        channel: ParcelBox2
        importance: default
        timeout: 86400
        visibility: public
        notification_icon: mdi:package-variant-closed
        sticky: 'true'
  mode: single
- id: '1694727006658'
  alias: House Doorbell - External Notify
  description: Take photo first, rather than using camera_proxy, as camera_proxy only
    takes the image when the notification is delivered, which may be later if signal
    is poor.
  trigger:
  - type: turned_on
    platform: device
    device_id: b03ab12c707340e8849888171a79caed
    entity_id: 7c6911b35b21b35fae0f55d88984a7d9
    domain: binary_sensor
  condition: []
  action:
  - if:
    - condition: state
      entity_id: sensor.rich_mob_app_ringer_mode
      state: normal
    - condition: state
      entity_id: sensor.rich_mob_app_do_not_disturb_sensor
      state: 'off'
    - condition: state
      entity_id: sensor.rich_mob_app_audio_mode
      state: normal
    - condition: state
      entity_id: binary_sensor.rich_mob_app_music_active
      state: 'off'
      enabled: false
    then:
    - service: notify.mobile_app_rich_mob_app
      data:
        data:
          channel: DoorbellTTS2
          importance: high
          visibility: public
          tts_text: Ding Dong Doorbell
          media_stream: alarm_stream_max
          ttl: 0
          priority: high
        message: TTS
  - if:
    - condition: state
      entity_id: sensor.lucy_mob_app_ringer_mode
      state: normal
    - condition: state
      entity_id: sensor.lucy_mob_app_do_not_disturb_sensor
      state: 'off'
    - condition: state
      entity_id: sensor.lucy_mob_app_audio_mode
      state: normal
    - condition: state
      entity_id: binary_sensor.lucy_mob_app_music_active
      state: 'off'
      enabled: false
    then:
    - service: notify.mobile_app_lucy_mob_app
      data:
        data:
          channel: DoorbellTTS2
          importance: high
          visibility: public
          tts_text: Ding Dong Doorbell
          media_stream: alarm_stream_max
          ttl: 0
          priority: high
        message: TTS
  - service: camera.snapshot
    data:
      filename: /media/frontdoor.jpg
    target:
      entity_id: camera.front_door_11
  - service: notify.mobile_app_rich_mob_app
    data:
      data:
        image: /media/local/frontdoor.jpg
        color: red
        channel: DoorbellImage2
        vibrationPattern: 100,200,100,100,75,25,100,200,100,500,100,200,100,500
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
        ttl: 0
        priority: high
        sticky: 'true'
      message: ' '
  - service: notify.mobile_app_lucy_mob_app
    data:
      data:
        image: /media/local/frontdoor.jpg
        color: red
        channel: DoorbellImage2
        vibrationPattern: 100,200,100,100,75,25,100,200,100,500,100,200,100,500
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
        ttl: 0
        priority: high
        sticky: 'true'
      message: ' '
  mode: single
- id: '1694790204906'
  alias: Front door opened with no one home
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 86b815b15cbf84a75984db3b46f6cc17
    entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
    enabled: true
  action:
  - service: camera.snapshot
    data:
      filename: /media/frontdoor_sensor.jpg
    target:
      entity_id: camera.front_door_11
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Front Door
      message: Door opened, but no one is home!
      data:
        image: /media/local/frontdoor_sensor.jpg
        color: red
        channel: DoorOpen1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  - service: notify.mobile_app_lucy_mob_app
    data:
      title: Front Door
      message: Door opened, but no one is home!
      data:
        image: /media/local/frontdoor_sensor.jpg
        color: red
        channel: DoorOpen1
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  mode: single
- id: '1694795158536'
  alias: Back door opened but no one is home
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: dd6c9ee012d55a6e6f1b0ef375270d86
    entity_id: 3cd6c236c41a010470145e104bd7f36f
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
    enabled: true
  action:
  - service: camera.snapshot
    data:
      filename: /media/garden.jpg
    target:
      entity_id: camera.garden_18
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Back Door
      message: Back door opened, but no one is home!
      data:
        image: /media/local/garden.jpg
        color: red
        channel: BackDoorOpen
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  - service: notify.mobile_app_lucy_mob_app
    data:
      title: Back Door
      message: Back door opened, but no one is home!
      data:
        image: /media/local/garden.jpg
        color: red
        channel: BackDoorOpen
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  mode: single
- id: '1696178796762'
  alias: Living Room TV Speakers Auto On-Off
  description: 'Turn on living room speakers when Samsung Smart TV is turned on.

    '
  trigger:
  - platform: device
    type: changed_states
    device_id: 99a89cc7d2a737c382a99397821a0522
    entity_id: bff78da4f1f7d24e59e81c86729d0ceb
    domain: media_player
  condition: []
  action:
  - choose:
    - conditions:
      - condition: device
        device_id: 99a89cc7d2a737c382a99397821a0522
        domain: media_player
        entity_id: bff78da4f1f7d24e59e81c86729d0ceb
        type: is_on
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.tv_speakers_button_2_power
    - conditions:
      - condition: device
        device_id: 99a89cc7d2a737c382a99397821a0522
        domain: media_player
        entity_id: bff78da4f1f7d24e59e81c86729d0ceb
        type: is_off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.tv_speakers_button_2_power
    enabled: true
  mode: restart
- id: '1697309989912'
  alias: Lucy Location Watchdog
  description: Lucy has no mobile data on her phone, so when she is away without wifi,
    the location automations at home will continue to think she is at home, causing
    issues. This automation sets Lucy as away after a time of no location updates,
    to ensure the automations work.
  trigger:
  - platform: template
    value_template: '{% if ((as_timestamp( now()) - as_timestamp(states.person.lucy.last_updated))
      | int) > 1200 %}true{% endif %}'
  condition:
  - condition: template
    value_template: '{% if ((as_timestamp( now()) - as_timestamp(states.person.lucy.last_updated))
      | int) > 1200 %}true{% endif %}'
  action:
  - service: device_tracker.see
    data:
      dev_id: google_maps_114635444798949098363
      location_name: not_home
  mode: single
- id: '1697311341807'
  alias: Turn on hallway lights for a moment when we get home
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 86b815b15cbf84a75984db3b46f6cc17
    entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
    domain: binary_sensor
  condition:
  - condition: sun
    after: sunset
    after_offset: 00:30
    before: sunrise
  action:
  - service: light.turn_on
    data:
      transition: 20
      kelvin: 2700
    target:
      device_id: 0e1ed242a4670cea76f671cc12039968
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - choose:
    - conditions:
      - type: is_open
        condition: device
        device_id: 86b815b15cbf84a75984db3b46f6cc17
        entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
        domain: binary_sensor
      sequence:
      - wait_for_trigger:
        - type: not_opened
          platform: device
          device_id: 86b815b15cbf84a75984db3b46f6cc17
          entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
          domain: binary_sensor
        timeout:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.downstairs_hallway_light
    - conditions:
      - type: is_not_open
        condition: device
        device_id: 86b815b15cbf84a75984db3b46f6cc17
        entity_id: f0cb1ec8ad721e92bd29b0684af17fe6
        domain: binary_sensor
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.downstairs_hallway_light
    enabled: false
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.downstairs_hallway_light
  mode: restart
- id: '1697311647945'
  alias: Garage door opened but no one is home
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 6d3f659d3b1cf6534dc09fa4fcca868d
    entity_id: 17edc1d1385c61490d54f583bbb34c2b
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.richard
      zone: zone.home
    - condition: zone
      entity_id: person.lucy
      zone: zone.home
    enabled: true
  action:
  - service: camera.snapshot
    data:
      filename: /media/garage_sensor.jpg
    target:
      entity_id: camera.garage_13
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Front Door
      message: Door opened, but no one is home!
      data:
        image: /media/local/garage_sensor.jpg
        color: red
        channel: DoorOpen3
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  - service: notify.mobile_app_lucy_mob_app
    data:
      title: Front Door
      message: Door opened, but no one is home!
      data:
        image: /media/local/garage_sensor.jpg
        color: red
        channel: DoorOpen3
        vibrationPattern: 100,200,100,200,100,200,100,200
        importance: high
        timeout: 86400
        visibility: public
        notification_icon: mdi:door
  mode: single
- id: '1697388186314'
  alias: Energenie eTRV Error
  description: ''
  trigger:
  - type: problem
    platform: device
    device_id: a46ff2f2479fd7381a267a77a12734ae
    entity_id: cb5fcb489d2672ac9dad67779d1b5c08
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: e79922e5a787ed8db81ee253715ea823
    entity_id: 240181bd9a3ee5f41a115bad8769841b
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: 061f81b04836d8e074d7e2542b21767c
    entity_id: a050971712c4335b998b67489b3e07b8
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: 55d26468639a4f1005742215878de937
    entity_id: c8108715bdfc512a18dfbbe5124bee96
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: f694a04cab17376f9ccbb97b67b6365d
    entity_id: a1222f8d5b3d6a922a9e71ab061f2292
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: 9fb3ba0a224918b6c1b43afbcc3c1f23
    entity_id: 8e53453c39e12d27442ff5b35a6deced
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: edd53a3020762c37680c07cc4c38d557
    entity_id: cd361b26865b69681400ee96ef06c9c6
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: b1e80b075b7aff30c3ef1b6e6b022e25
    entity_id: 2a0116895e15059336a19e2ee00a5b31
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: 71e963eadf1071d0f777742a6fbb5cf9
    entity_id: fc32779959e9512a07e24e50efad3521
    domain: binary_sensor
  - type: problem
    platform: device
    device_id: a9d1acaaf374a3234065ce3dca7d9f04
    entity_id: 0e45a0c11ea5c5863f199013dec69f52
    domain: binary_sensor
  condition: []
  action:
  - service: notify.mobile_app_rich_mob_app
    data:
      title: Energenie eTRV Error
      message: Energenie eTRV Error. This was triggered by {{ trigger.id }}
      data:
        color: red
        channel: EnergenieeTRVError
        vibrationPattern: 100,200,100,200,100,200,100,200
        visibility: public
        notification_icon: mdi:alert-circle-outline
  mode: single
- id: '1697572691572'
  alias: Simulate Presence Lights - DEV
  description: Automation Simulate Presence / Occupancy Simulation. Runs single and
    if we get home it will turn off all the lights (cancel the run)
  trigger:
  - entity_id:
    - person.richard
    from: home
    platform: state
    to:
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - entity_id:
    - person.lucy
    from: home
    platform: state
    to:
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - event: sunset
    offset: +00:30:00
    platform: sun
  - event_type: event_simulate_presence
    platform: event
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    - before: '23:55:00'
      condition: time
    - condition: state
      entity_id: input_boolean.simulate_presence_enable
      state: 'on'
    - condition: state
      entity_id: person.lucy
      state: not_home
    - condition: state
      entity_id: person.richard
      state: not_home
    enabled: false
  action:
  - if:
    - condition: and
      conditions:
      - condition: state
        entity_id: sun.sun
        state: below_horizon
      - before: '23:55:00'
        condition: time
        enabled: false
      - condition: state
        entity_id: input_boolean.simulate_presence_enable
        state: 'on'
      - condition: state
        entity_id: person.lucy
        state: not_home
      - condition: state
        entity_id: person.richard
        state: not_home
    then:
    - data_template:
        entity_id: '{{ state_attr(''light.presence_simulation_lights'', ''entity_id'')
          | random }}'
      service: light.turn_on
    - delay: 00:{{ (range(10, 30) | random) }}:00
    - if:
      - condition: or
        conditions:
        - condition: time
          after: '11:50:00'
        - condition: state
          entity_id: person.lucy
          state: home
        - condition: state
          entity_id: person.richard
          state: home
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.presence_simulation_lights
    - data_template:
        entity_id: '{{ state_attr(''light.presence_simulation_lights'', ''entity_id'')
          | random }}'
      service: light.turn_on
    - delay: 00:{{ (range(10, 30) | random) }}:00
    - data_template:
        entity_id: '{{ state_attr(''light.presence_simulation_lights'', ''entity_id'')
          | random }}'
      service: light.turn_off
    - if:
      - condition: or
        conditions:
        - condition: time
          after: '11:50:00'
          enabled: false
        - condition: state
          entity_id: person.lucy
          state: home
        - condition: state
          entity_id: person.richard
          state: home
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.presence_simulation_lights
    - event: event_simulate_presence
    else:
    - condition: and
      conditions:
      - condition: state
        entity_id: person.lucy
        state: not_home
      - condition: state
        entity_id: person.richard
        state: not_home
      enabled: false
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.presence_simulation_lights
  mode: single
- id: '1702742847276'
  alias: 'Office Blinds Schedule '
  description: "Opens in the morning, only if Richard is home. \nCloses in the evening
    at dusk."
  trigger:
  - platform: time
    at: 09:00:00
    id: open
  - platform: sun
    event: sunset
    offset: -02:00:00
    id: close
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - close
      sequence:
      - service: cover.close_cover
        target:
          entity_id: cover.office_blinds
        data: {}
    - conditions:
      - condition: trigger
        id:
        - open
      - condition: zone
        entity_id: person.richard
        zone: zone.home
      sequence:
      - service: cover.open_cover
        target:
          entity_id: cover.office_blinds
        data: {}
  mode: single
- id: '1705695753761'
  alias: Bathroom Audio Remote - Google Home Speaker
  description: 'Triggered by an IKEA five-button Zigbee remote through zigbee2mqtt,
    this automation controls the Bluetooth functionality of a Google Home/Nest Mini
    speaker.


    Due to limitations in Home Assistant, direct control of a Google Home/Nest speaker''s
    Bluetooth is not possible. To circumvent this, a toggle "helper" is employed,
    acting as a trigger within a Google Home Automation to react to changes in the
    toggle''s state and controls the Bluetooth state.


    Once my phone is Bluetooth-paired to the Google Home/Nest speaker, volume control
    commands issued to the speaker through Home Assistant are seamlessly relayed to
    the phone. However, it''s important to note that these commands are presently
    limited to pause and volume adjustments within Home Assistant, even though voice
    commands can be used to control next/previous track functions. This is a limitation
    of Google Home/Nest Mini, next/previous track works with Home Home/Nest Hubs just
    fine.'
  trigger:
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: brightness_up_click
    discovery_id: 0x000b57fffe38a445 action_brightness_up_click
    id: up_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: brightness_down_click
    discovery_id: 0x000b57fffe38a445 action_brightness_down_click
    id: down_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: toggle
    discovery_id: 0x000b57fffe38a445 action_toggle
    id: middle_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: arrow_left_click
    discovery_id: 0x000b57fffe38a445 action_arrow_left_click
    id: left_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: arrow_right_click
    discovery_id: 0x000b57fffe38a445 action_arrow_right_click
    id: right_click
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: brightness_up_hold
    discovery_id: 0x000b57fffe38a445 action_brightness_up_hold
    id: hold_up
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: arrow_left_hold
    discovery_id: 0x000b57fffe38a445 action_arrow_left_hold
    id: hold_left
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: arrow_right_hold
    discovery_id: 0x000b57fffe38a445 action_arrow_right_hold
    id: hold_right
  - platform: device
    domain: mqtt
    device_id: 18318fe5e7eaecbbd0d63380720d9706
    type: action
    subtype: brightness_down_hold
    discovery_id: 0x000b57fffe38a445 action_brightness_down_hold
    id: hold_down
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - up_click
      sequence:
      - service: media_player.volume_up
        metadata: {}
        data: {}
        target:
          device_id: 30e5174b145711eb88da47ba37409372
    - conditions:
      - condition: trigger
        id:
        - down_click
      sequence:
      - service: media_player.volume_down
        metadata: {}
        data: {}
        target:
          device_id: 30e5174b145711eb88da47ba37409372
    - conditions:
      - condition: trigger
        id:
        - middle_click
      sequence:
      - service: media_player.media_play_pause
        metadata: {}
        data: {}
        target:
          device_id: 30e5174b145711eb88da47ba37409372
    - conditions:
      - condition: trigger
        id:
        - left_click
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bathroom_audio_remote_proxy_bridge_for_google_assistant
    - conditions:
      - condition: trigger
        id:
        - right_click
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bathroom_audio_remote_proxy_bridge_for_google_assistant
    - conditions:
      - condition: trigger
        id:
        - hold_up
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bathroom_audio_remote_proxy_bridge_for_google_assistant
        enabled: false
    - conditions:
      - condition: trigger
        id:
        - hold_down
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bathroom_audio_remote_proxy_bridge_for_google_assistant
        enabled: false
  mode: single
- id: '1706448756375'
  alias: Heating Follow Radiator Demand
  description: ''
  trigger:
  - platform: state
    entity_id:
    - climate.living_room_radiator_climate_control
    attribute: temperature
  - platform: state
    entity_id:
    - climate.living_room_radiator_climate_control
    attribute: current_temperature
  condition: []
  action: []
  mode: single
- id: '1708473467198'
  alias: Living Room Fairy Lights Follow Other Lights
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 6e0ded4c47c76900af05e933f9348a46
    entity_id: 020edf627efb532c118e3a6362fbc1a4
    domain: light
    id: 'on'
  - platform: device
    type: turned_off
    device_id: 6e0ded4c47c76900af05e933f9348a46
    entity_id: 020edf627efb532c118e3a6362fbc1a4
    domain: light
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - 'on'
      sequence:
      - type: turn_on
        device_id: c3b025b97185a156ea069417b14401b8
        entity_id: ae59ac0fe7bafc0e550d02d7984ca5e9
        domain: light
    - conditions:
      - condition: trigger
        id:
        - 'off'
      sequence:
      - type: turn_off
        device_id: c3b025b97185a156ea069417b14401b8
        entity_id: ae59ac0fe7bafc0e550d02d7984ca5e9
        domain: light
  mode: restart
- id: '1710954157058'
  alias: Pull Water meter data every hour
  description: Warning this will kill the battery if overused
  trigger:
  - platform: time_pattern
    minutes: '10'
  condition: []
  action:
  - service: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.water_meter_request
  mode: single
- id: '1714268450987'
  alias: Run off UPS
  description: ''
  trigger:
  - platform: time
    at: 09:40:00
  condition:
  - condition: time
    weekday:
    - sun
  action:
  - type: calibrate_start
    device_id: 2852d68eacdcae952e6fd84251240afb
    domain: nut
  mode: single
- id: '1715801236786'
  alias: Tile Tracker Low Battery Alert
  description: ''
  trigger:
  - platform: time
    at: '11:00:00'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: device_tracker.small_water_bottle
        attribute: last_timestamp
        state: timedelta(days=4)
      - condition: template
        value_template: ' {{ now() - state_attr(''device_tracker.cold_sore_cream'',
          ''last_timestamp'') | as_datetime > timedelta(days=4) }}'
      sequence: []
  mode: single
- id: '1720117742034'
  alias: Tea Brewing Timer
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 71d5510f501b15c01210dff88a9c5e31
    type: action
    subtype: 'on'
  condition: []
  action:
  - service: notify.google_assistant_sdk
    data:
      message: 3 and a half minute tea timer started
    enabled: false
  - repeat:
      count: 2
      sequence:
      - service: light.toggle
        metadata: {}
        data: {}
        target:
          device_id:
          - 294f30f10444bcd2ef6ff9be250834f7
          - 20b10b9b40bf37d01adb72fd60ea4149
          - 061e0dd32d43fd2355543b4f4db149ac
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 500
      - service: light.toggle
        metadata: {}
        data: {}
        target:
          device_id:
          - 294f30f10444bcd2ef6ff9be250834f7
          - 20b10b9b40bf37d01adb72fd60ea4149
          - 061e0dd32d43fd2355543b4f4db149ac
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 500
  - delay:
      hours: 0
      minutes: 3
      seconds: 30
      milliseconds: 0
  - service: notify.google_assistant_sdk
    data:
      message: Tea timer is up, your lovely cup of tea is ready. Enjoy!
    enabled: true
  mode: restart
- id: '1720118905430'
  alias: Broadcast dinner almost ready
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 71d5510f501b15c01210dff88a9c5e31
    type: action
    subtype: 'off'
  condition: []
  action:
  - service: notify.google_assistant_sdk
    data:
      message: Dinner is ready.
    enabled: true
  - service: notify.google_assistant_sdk
    data:
      message: Dinner is ready Richard
      target:
      - office
      - living room
      - kichen
      - dining room
    enabled: false
  - service: notify.google_assistant_sdk
    data:
      message: Hello sweetie, dinner is almost ready. Just wanted to let you know.
    enabled: false
  mode: single
- id: '1720571709980'
  alias: Reboot bathroom speaker twice a day
  description: For some reason my Google home seems to get stuck in a loop and becomes
    unresponsive. This automation forces it to reboot as a workaround.
  trigger:
  - platform: time
    at: '11:00:00'
  - platform: time
    at: '23:00:00'
  condition:
  - condition: device
    device_id: 30e5174b145711eb88da47ba37409372
    domain: media_player
    entity_id: 92395fa37a44ae46a95d786ecf933dd3
    type: is_off
  action:
  - service: google_home.reboot_device
    metadata: {}
    data: {}
    target:
      device_id: 127737e2a86b116da4274dcb735b0349
  mode: single
- id: '1721088060009'
  alias: Remote control activate bedtime lights
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 26fbc14fff6a78d4c66a9f30fb62938b
    type: action
    subtype: arrow_right_hold
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: scene.turn_on
    metadata: {}
    target:
      entity_id: scene.bedtime_mode
  mode: single
- id: '1722123544585'
  alias: Garden Lights Motion
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: dd6c9ee012d55a6e6f1b0ef375270d86
    entity_id: 3cd6c236c41a010470145e104bd7f36f
    domain: binary_sensor
  condition:
  - condition: sun
    after: sunset
    after_offset: '0'
    before: sunrise
  action:
  - data:
      kelvin: 2700
      brightness_pct: 100
      transition: 2
    target:
      entity_id: light.garden_lights
    action: light.turn_on
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - data:
      transition: 10
    target:
      device_id: d074b346c18b807df9deee8fe2408e7a
    action: light.turn_off
  mode: restart
